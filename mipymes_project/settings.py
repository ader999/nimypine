# settings.py

"""
Django settings for mipymes_project project.
Generated by 'django-admin startproject' using Django 5.2.6.
"""
import os
from pathlib import Path
import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# --- Configuración de django-environ ---
# Inicializa django-environ, especificando que DEBUG debe ser booleano
env = environ.Env(
    DEBUG=(bool, False)
)

# Lee el archivo .env desde el directorio correcto
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))


# --- Configuraciones de Seguridad y Núcleo ---
SECRET_KEY = env('SECRET_KEY')
DEBUG = env('DEBUG')

ALLOWED_HOSTS = ['nimypine-production.up.railway.app', '127.0.0.1', 'nimypine.codeader.com']
CSRF_TRUSTED_ORIGINS = [
    'https://nimypine-production.up.railway.app',
    'http://127.0.0.1:8000',
    'https://nimypine.codeader.com'
]

# --- Aplicaciones Instaladas ---
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "cuentas",
    "marketplace",
    "produccion",
    "asistente",
    "minio_storage",
]

# --- Middleware ---
MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "mipymes_project.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, 'templates')],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "mipymes_project.wsgi.application"

# --- Base de Datos ---
DATABASES = {
    'default': env.db(),
}

# --- Validación de Contraseñas ---
AUTH_PASSWORD_VALIDATORS = [
    {"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"},
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]

# --- Internacionalización ---
LANGUAGE_CODE = "es"
TIME_ZONE = "UTC"
USE_I18N = True
USE_TZ = True



# --- Archivos Estáticos (Static Files) - Servidos por WhiteNoise ---
STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / "staticfiles"

# --- Archivos Multimedia (Media Files) - Subidos a MinIO ---
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Storage configuration for Django 5.2+
STORAGES = {
    "default": {
        "BACKEND": "minio_storage.storage.MinioMediaStorage",
    },
    "staticfiles": {
        "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage",
    },
}

# Minio storage settings
MINIO_STORAGE_ENDPOINT = env('MINIO_S3_ENDPOINT_URL')
MINIO_STORAGE_ACCESS_KEY = env('MINIO_ACCESS_KEY_ID')
MINIO_STORAGE_SECRET_KEY = env('MINIO_SECRET_ACCESS_KEY')
MINIO_STORAGE_MEDIA_BUCKET_NAME = env('MINIO_BUCKET_NAME')
MINIO_STORAGE_STATIC_BUCKET_NAME = env('MINIO_BUCKET_NAME')
MINIO_STORAGE_USE_HTTPS = True
MINIO_STORAGE_AUTO_CREATE_BUCKET = True
MINIO_STORAGE_AUTO_CREATE_POLICY = True
MINIO_STORAGE_MEDIA_USE_PRESIGNED = True

# PayPal settings
PAYPAL_CLIENT_ID = env('PAYPAL_ID_CLIENT')
PAYPAL_CLIENT_SECRET = env('PAYPAL_KEY')
PAYPAL_MODE = 'sandbox'  # Cambiar a 'live' para producción

# Email settings
EMAIL_BACKEND = env('EMAIL_BACKEND', default='django.core.mail.backends.console.EmailBackend')
EMAIL_HOST = env('EMAIL_HOST', default='smtp.gmail.com')
EMAIL_PORT = env.int('EMAIL_PORT', default=587)
EMAIL_USE_TLS = env.bool('EMAIL_USE_TLS', default=True)
EMAIL_HOST_USER = env('EMAIL_USER', default='noreply@nimypine.com')
EMAIL_HOST_PASSWORD = env('EMAIL_PWS', default='')
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

# --- Resto de la Configuración ---
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
AUTH_USER_MODEL = 'cuentas.Usuario'
AUTHENTICATION_BACKENDS = [
    'cuentas.backends.EmailOrUsernameModelBackend',
    'django.contrib.auth.backends.ModelBackend',
]
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'
LOGIN_URL = 'cuentas:login'

# Logging configuration
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'cuentas': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
        'django.core.mail': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': False,
        },
    },
}