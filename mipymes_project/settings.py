# settings.py

"""
Django settings for mipymes_project project.
Generated by 'django-admin startproject' using Django 5.2.6.
"""
import os
from pathlib import Path
import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# --- Configuración de django-environ ---
# Inicializa django-environ, especificando que DEBUG debe ser booleano
env = environ.Env(
    DEBUG=(bool, False)
)

# Lee el archivo .env
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))


# --- Configuraciones de Seguridad y Núcleo ---
SECRET_KEY = env('SECRET_KEY')
DEBUG = env('DEBUG')

ALLOWED_HOSTS = ['nimypine-production.up.railway.app', '127.0.0.1']
CSRF_TRUSTED_ORIGINS = [
    'https://nimypine-production.up.railway.app',
    'http://127.0.0.1:8000',
]

# --- Aplicaciones Instaladas ---
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "cuentas",
    "marketplace",
    "produccion",
    "storages",
]

# --- Middleware ---
MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    # "whitenoise.middleware.WhiteNoiseMiddleware", <-- ELIMINADO: No se usa con Minio.
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "mipymes_project.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, 'templates')],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "mipymes_project.wsgi.application"

# --- Base de Datos ---
DATABASES = {
    'default': env.db(),
}

# --- Validación de Contraseñas ---
AUTH_PASSWORD_VALIDATORS = [
    {"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"},
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]

# --- Internacionalización ---
LANGUAGE_CODE = "es"
TIME_ZONE = "UTC"
USE_I18N = True
USE_TZ = True



AWS_S3_ENDPOINT_URL = env('MINIO_S3_ENDPOINT_URL')
AWS_ACCESS_KEY_ID = env('MINIO_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = env('MINIO_SECRET_ACCESS_KEY')
AWS_STORAGE_BUCKET_NAME = env('MINIO_BUCKET_NAME')
AWS_QUERYSTRING_AUTH = False
AWS_S3_FILE_OVERWRITE = False
AWS_DEFAULT_ACL = None

# --- Archivos Estáticos (Static Files) ---
STATIC_URL = f'{AWS_S3_ENDPOINT_URL}/{AWS_STORAGE_BUCKET_NAME}/static/'
STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
STATIC_ROOT = BASE_DIR / "staticfiles"  # Esta línea es obligatoria para que `collectstatic` funcione

# --- Archivos Multimedia (Media Files) ---
MEDIA_URL = f'{AWS_S3_ENDPOINT_URL}/{AWS_STORAGE_BUCKET_NAME}/media/'
DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'






# --- Resto de la Configuración ---
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
AUTH_USER_MODEL = 'cuentas.Usuario'
LOGIN_REDIRECT_URL = 'produccion:panel'
LOGOUT_REDIRECT_URL = '/'
LOGIN_URL = 'cuentas:login'